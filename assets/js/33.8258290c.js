(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{299:function(a,t,s){"use strict";s.r(t);var r=s(14),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"谈论-http-缓存时我们在谈论什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#谈论-http-缓存时我们在谈论什么"}},[a._v("#")]),a._v(" 谈论 HTTP 缓存时我们在谈论什么")]),a._v(" "),t("p",[a._v("在浏览器众多缓存中的 HTTP 缓存可能很多人对这个的概念并没有很清晰，每个人都知道进入一次网页之后再刷新一次页面，加载速度会比首次加载快非常多，每个人都知道这是浏览器缓存的 magic，但是对此背后的原因可能不甚了解...")]),a._v(" "),t("h3",{attrs:{id:"当我们在谈论-http-缓存时我们在谈论什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#当我们在谈论-http-缓存时我们在谈论什么"}},[a._v("#")]),a._v(" 当我们在谈论 HTTP 缓存时我们在谈论什么:")]),a._v(" "),t("p",[a._v("我们实际上是在谈论下面这两种情况:")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/163e32ac608a1146?raw=true",alt:""}})]),a._v(" "),t("p",[a._v("如上图，浏览器对静态资源的 HTTP 缓存有两种情况，一种是强缓存(本地缓存)，另一种是弱缓存(协商缓存)。")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"缓存流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存流程"}},[a._v("#")]),a._v(" 缓存流程：")]),a._v(" "),t("h4",{attrs:{id:"浏览器第一次请求资源时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器第一次请求资源时"}},[a._v("#")]),a._v(" 浏览器第一次请求资源时：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/163e323d0879019f?raw=true",alt:"图片出自网络"}})]),a._v(" "),t("p",[a._v("浏览器"),t("strong",[a._v("第一次请求资源时，必须下载所有的资源，然后根据响应的 header 内容来决定，如何缓存资源")]),a._v("。可能采用的是强缓存，也可能是弱缓存")]),a._v(" "),t("h4",{attrs:{id:"浏览器后续请求资源时的匹配流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器后续请求资源时的匹配流程"}},[a._v("#")]),a._v(" 浏览器后续请求资源时的匹配流程：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/163e33ba0484fb14?raw=true",alt:""}})]),a._v(" "),t("p",[a._v("由上图可以知道当浏览器请求一个静态资源时的 HTTP 流程：")]),a._v(" "),t("ol",[t("li",[a._v("强缓存阶段：先在本地查找该资源，如果发现该资源，并且其他限制也没有问题(比如:缓存有效时间)，就命中强缓存，返回 200，直接使用强缓存，并且不会发送请求到服务器")]),a._v(" "),t("li",[a._v("弱缓存阶段：在本地缓存中找到该资源，发送一个 http 请求到服务器，服务器判断这个资源没有被改动过，则返回 304，让浏览器使用该资源。")]),a._v(" "),t("li",[a._v("缓存失败阶段(重新请求)：当服务器发现该资源被修改过，或者在本地没有找到该缓存资源，服务器则返回该资源的数据。")])]),a._v(" "),t("h3",{attrs:{id:"强缓存与弱缓存的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存与弱缓存的区别"}},[a._v("#")]),a._v(" 强缓存与弱缓存的区别：")]),a._v(" "),t("p",[t("strong",[a._v("获取资源形式")]),a._v("： 都是从缓存中获取资源的。")]),a._v(" "),t("p",[t("strong",[a._v("状态码")]),a._v("： 强缓存返回 200(from cache),弱缓存返回 304 状态码")]),a._v(" "),t("p",[t("strong",[a._v("请求(最大区别)")]),a._v("：")]),a._v(" "),t("p",[a._v("强缓存不发送请求，直接从缓存中取。")]),a._v(" "),t("p",[a._v("弱缓存需要发送一个请求，验证这个文件是否可以使用（有没有被改动过）。")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[a._v("#")]),a._v(" 强缓存：")]),a._v(" "),t("p",[a._v("强缓存是利用 Expires 或者 Cache-Control，让原始服务器为文件设置一个过期时间，在多长时间内可以将这些内容视为最新的。")]),a._v(" "),t("p",[a._v("若时间未过期，则命中强缓存，使用缓存文件不发送请求。")]),a._v(" "),t("h3",{attrs:{id:"cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),t("p",[a._v("Cache-Control 是 http1.1 中为了弥补"),t("code",[a._v("Expires")]),a._v("的缺陷而加入的，当 Expires 和 Cache-Control 同时存在时，Cache-Control 优先级高于 Expires。")]),a._v(" "),t("p",[t("strong",[a._v("选项")]),a._v("：")]),a._v(" "),t("p",[a._v("可缓存性:")]),a._v(" "),t("p",[t("code",[a._v("public")]),a._v("： 服务器端和浏览器端都能缓存")]),a._v(" "),t("p",[t("code",[a._v("private")]),a._v(": 只能浏览器端缓存")]),a._v(" "),t("p",[t("code",[a._v("no-cache")]),a._v(": 强制浏览器在使用 cache 拷贝之前先"),t("strong",[a._v("提交一个 http 请求到源服务器进行确认")]),a._v("。http 请求没有减少，会减少一个响应体(文件内容),这种个选项类似弱缓存。")]),a._v(" "),t("p",[t("code",[a._v("only-if-cached")]),a._v(": 表明客户端只接受已缓存的响应，并且不要向原始服务器检查是否有更新的拷贝。")]),a._v(" "),t("p",[a._v("到期设置：")]),a._v(" "),t("p",[t("code",[a._v("max-age=60")]),a._v("：设置缓存存储的最大周期，超过这个时间缓存被认为过期(单位秒)。 这里是 60 秒")]),a._v(" "),t("p",[a._v("其他设置：")]),a._v(" "),t("p",[t("code",[a._v("no-store")]),a._v(": 不缓存，使用协商缓存")]),a._v(" "),t("p",[t("code",[a._v("must-revalidate")]),a._v(": 缓存必须在使用之前验证旧资源的状态，并且不可使用过期资源。")]),a._v(" "),t("p",[a._v("更多设置，移动"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control",target:"_blank",rel:"noopener noreferrer"}},[a._v("MDN"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 示例")]),a._v("\nCache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Control"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" no"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" no"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("store"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" must"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("revalidate\nCache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Control"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("31536000")]),a._v("\nCache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Control"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" max"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("age"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3600")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" must"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("revalidate\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"http1-0-时代的缓存-expires-pragma"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http1-0-时代的缓存-expires-pragma"}},[a._v("#")]),a._v(" http1.0 时代的缓存 Expires+Pragma")]),a._v(" "),t("p",[t("strong",[a._v("Expires 用于设置缓存到期时间")]),a._v("：")]),a._v(" "),t("p",[a._v("指定缓存到期 GMT 的绝对时间，如果设了 max-age，max-age 就会覆盖 expires，如果 expires 到期需要重新请求。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("Expires")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("Sat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("09")]),a._v(" Jun "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2018")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("08")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("56")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GMT")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("有一个问题是由于使用具体时间，如果时间表示出错或者没有转换到正确的时区都可能造成缓存生命周期出错。")]),a._v(" "),t("p",[t("strong",[a._v("Pragma 禁用缓存：")])]),a._v(" "),t("p",[t("code",[a._v("Pragma : no-cache")]),a._v(" 表示防止客户端缓存，需要强制从服务器获取最新的数据；")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("Pragma")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" no "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" cache "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//只有这一个用法 禁用缓存，强制从服务器获取最新的数据；")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"强缓存命中-from-memory-cache-from-disk-cache"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存命中-from-memory-cache-from-disk-cache"}},[a._v("#")]),a._v(" 强缓存命中 from memory cache & from disk cache")]),a._v(" "),t("p",[a._v("在测试的时候，看到命中强缓存时，有两种状态，200 (from memory cache) cache & 200 (from disk cache)，于是去找了一下这两者的区别：")]),a._v(" "),t("p",[a._v("memory cache: 将资源存到"),t("strong",[a._v("内存")]),a._v("中，从内存中获取。")]),a._v(" "),t("p",[a._v("disk cache：将资源缓存到"),t("strong",[a._v("磁盘")]),a._v("中，从磁盘中获取。")]),a._v(" "),t("p",[a._v("二者最大的区别在于："),t("strong",[a._v("当退出进程时，内存中的数据会被清空，而磁盘的数据不会")]),a._v("。")]),a._v(" "),t("p",[a._v("更详细的介绍推荐这篇"),t("a",{attrs:{href:"https://blog.csdn.net/baidu_38742725/article/details/77181078",target:"_blank",rel:"noopener noreferrer"}},[a._v("文章"),t("OutboundLink")],1)]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"弱缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱缓存"}},[a._v("#")]),a._v(" 弱缓存：")]),a._v(" "),t("p",[a._v("如果强缓存时间过期，或者没有设置，导致未命中的话。就进入到了弱缓存的阶段了，")]),a._v(" "),t("p",[t("strong",[a._v("Last-Modified & if-modified-since:")])]),a._v(" "),t("p",[a._v("Last-Modified 与 If-Modified-Since 是一对报文头，属于 http 1.0。")]),a._v(" "),t("p",[a._v("last-modified 是 web 服务器认为文件的最后修改时间，"),t("code",[a._v("last-modified")]),a._v("是第一次请求文件的时候，"),t("strong",[a._v("服务器返回")]),a._v("的一个属性。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("Last"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Modified"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Sat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("09")]),a._v(" Jun "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2018")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("08")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("56")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GMT")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("第二次请求这个文件时，浏览器把"),t("code",[a._v("If-Modified-Since")]),t("strong",[a._v("发送给服务器")]),a._v("，询问该时间之后文件是否被修改过。")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("If"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Modified"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Since"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" Sat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("09")]),a._v(" Jun "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2018")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("08")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("56")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GMT")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 跟Last-Modified的值一样")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[t("strong",[a._v("ETag & If-None-Match")])]),a._v(" "),t("p",[a._v("ETag 与 If-None-Match 是一对报文，属于 http 1.1。")]),a._v(" "),t("p",[t("strong",[a._v("ETag 是一个文件的唯一标志符")]),a._v("。就像一个哈希或者指纹，每个文件都有一个单独的标志，只要这个文件发生了改变，这个标志就会发生变化。")]),a._v(" "),t("p",[a._v("ETag 机制类似于乐观锁机制，如果请求报文的 ETag 与服务器的不一致，则表示该资源已经被修改过来，需要发最新的内容给浏览器。")]),a._v(" "),t("p",[t("code",[a._v("ETag")]),a._v("也是首次请求的时候，服务器返回的:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token literal-property property"}},[a._v("ETag")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'8F759D4F67D66A7244638AD249675BE2'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 长这样")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[t("code",[a._v("If-None-Match")]),a._v("也是浏览器发送到服务器验证，文件是否改变的:")]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("If"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("None"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("Match"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8F759D4F67D66A7244638AD249675BE2"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 跟ETag的值一样")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h3",{attrs:{id:"etag-lastmodified-过程如下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#etag-lastmodified-过程如下"}},[a._v("#")]),a._v(" "),t("strong",[a._v("Etag/lastModified 过程如下:")])]),a._v(" "),t("ol",[t("li",[a._v("客户端第一次向服务器发起请求,服务器将附加"),t("code",[a._v("Last-Modified/ETag")]),a._v("到所提供的资源上去")]),a._v(" "),t("li",[a._v("当再一次请求资源,"),t("strong",[a._v("如果没有命中强缓存")]),a._v(",在执行在验证时,"),t("strong",[a._v("将上次请求时服务器返回的 Last-Modified/ETag 一起传递给服务器")]),a._v("。")]),a._v(" "),t("li",[a._v("服务器检查该 Last-Modified 或 ETag，并判断出该资源"),t("strong",[a._v("页面自上次客户端请求之后还未被修改，返回响应 304 和一个空的响应体")]),a._v("。")])]),a._v(" "),t("h3",{attrs:{id:"同时使用两个报文头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同时使用两个报文头"}},[a._v("#")]),a._v(" 同时使用两个报文头:")]),a._v(" "),t("p",[a._v("同时使用这两个报文头，"),t("strong",[a._v("两个都匹配才会命中弱缓存")]),a._v("，否则将重新请求资源。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/163e3d5d5e2119a5?raw=true",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"etag-主要为了解决-last-modified-无法解决的一些问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#etag-主要为了解决-last-modified-无法解决的一些问题"}},[a._v("#")]),a._v(" Etag 主要为了解决 Last-Modified 无法解决的一些问题：")]),a._v(" "),t("ol",[t("li",[a._v("一些文件也许内容并不改变(仅仅改变的修改时间)，这个时候我们不希望文件重新加载。（Etag 值会触发缓存，Last-Modified 不会触发）")]),a._v(" "),t("li",[a._v("If-Modified-Since 能检查到的粒度是秒级的，当修改非常频繁时，Last-Modified 会触发缓存，而 Etag 的值不会触发，重新加载。")]),a._v(" "),t("li",[a._v("某些服务器不能精确的得到文件的最后修改时间。")])]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"用户操作行为与缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户操作行为与缓存"}},[a._v("#")]),a._v(" 用户操作行为与缓存")]),a._v(" "),t("p",[a._v("F5 刷新导致强缓存失效。")]),a._v(" "),t("p",[a._v("ctrl+F5 强制刷新页面强缓存，弱缓存都会失效。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/OBKoro1/articleImg_src/blob/master/juejin/163e4019ed29d0ae?raw=true",alt:"图片出自网络"}})]),a._v(" "),t("h3",{attrs:{id:"如何设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何设置"}},[a._v("#")]),a._v(" 如何设置？")]),a._v(" "),t("p",[a._v("一般是服务器端设置这些请求头的，我自己试了用阿里云服务器设置"),t("code",[a._v("Cache-Control")]),a._v("，设置一下很方便的。")]),a._v(" "),t("hr"),a._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),t("p",[a._v("通过网络重复请求资源既缓慢，成本又高，缓存和重用以前获取的资源的能力成为优化性能很关键的一个方面,也是大厂面试时很频繁出现的内容，掌握好这块知识点是非常重要的，希望本文能给你带来些收获。")]),a._v(" "),t("p",[a._v("文章如有不正确的地方欢迎各位路过的大佬鞭策！喜欢的话，赶紧点波"),t("s",[a._v("订阅")]),a._v("关注/喜欢。")]),a._v(" "),t("h3",{attrs:{id:"点个star支持我一下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点个star支持我一下"}},[a._v("#")]),a._v(" 点个"),t("a",{attrs:{href:"https://boom-bo.github.io/web_accumulation",target:"_blank",rel:"noopener noreferrer"}},[a._v("Star"),t("OutboundLink")],1),a._v("支持我一下~")])])}),[],!1,null,null,null);t.default=e.exports}}]);