(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{278:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js-基础-深入浅出继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-基础-深入浅出继承"}},[t._v("#")]),t._v(" JS 基础-深入浅出继承")]),t._v(" "),s("p",[t._v("上篇文章详细解析了原型、原型链的相关知识点，这篇文章讲的是和原型链有密切关联的继承，它是前端基础中很重要的一个知识点，它对于代码复用来说非常有用，本篇将详细解析 JS 中的各种继承方式和优缺点进行，希望看完本篇文章能够对继承以及相关概念理解的更为透彻。")]),t._v(" "),s("h4",{attrs:{id:"本篇文章需要先理解原型、原型链以及call的相关知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本篇文章需要先理解原型、原型链以及call的相关知识"}},[t._v("#")]),t._v(" 本篇文章需要先理解原型、原型链以及"),s("code",[t._v("call")]),t._v("的相关知识：")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5d622f14f265da03a1486408",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 基础-函数、对象和原型、原型链的关系"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5d469e0851882544b85c32ef",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 基础-面试官想知道你有多理解 call,apply,bind？"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"何为继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#何为继承"}},[t._v("#")]),t._v(" 何为继承？")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BB%A7%E6%89%BF_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),s("OutboundLink")],1),t._v("：继承可以使得子类具有父类别的各种属性和方法，而不需要再次编写相同的代码。")])]),t._v(" "),s("p",[s("strong",[t._v("继承是一个类从另一个类获取方法和属性的过程")]),t._v("。")]),t._v(" "),s("p",[t._v("PS：或者是多个类")]),t._v(" "),s("h4",{attrs:{id:"js-实现继承的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-实现继承的原理"}},[t._v("#")]),t._v(" JS 实现继承的原理")]),t._v(" "),s("blockquote",[s("p",[t._v("记住这个概念，你会发现 JS 中的继承都是在实现这个目的，差异是它们的实现方式不同。")])]),t._v(" "),s("p",[s("strong",[t._v("复制父类的属性和方法来重写子类原型对象")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"原型链继承-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承-new"}},[t._v("#")]),t._v(" 原型链继承(new)：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的this属性'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfatherFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的this属性'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心步骤：重写子类的原型对象")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将fatherFn的实例赋值给sonFn的prototype")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类原型对象的属性或者方法'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类的属性/方法声明在后面,避免被覆盖")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化子类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sonFnInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的实例：'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sonFnInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h4",{attrs:{id:"原型链继承获取父类的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承获取父类的属性和方法"}},[t._v("#")]),t._v(" 原型链继承获取父类的属性和方法")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("fatherFn")]),t._v("通过 this 声明的属性/方法都会绑定在"),s("code",[t._v("new")]),t._v("期间创建的新对象上。")]),t._v(" "),s("li",[t._v("新对象的原型是"),s("code",[t._v("father.prototype")]),t._v(",通过原型链的属性查找到"),s("code",[t._v("father.prototype")]),t._v("的属性和方法。")])]),t._v(" "),s("h4",{attrs:{id:"理解new做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解new做了什么"}},[t._v("#")]),t._v(" 理解"),s("code",[t._v("new")]),t._v("做了什么：")]),t._v(" "),s("blockquote",[s("p",[t._v("new 在本文出现多次，new 也是 JS 基础中很重要的一块内容，很多知识点会涉及到 new，不太理解的要多看几遍。")])]),t._v(" "),s("ol",[s("li",[t._v("创建一个全新的对象。")]),t._v(" "),s("li",[t._v("这个新对象的原型("),s("code",[t._v("__proto__")]),t._v(")指向函数的"),s("code",[t._v("prototype")]),t._v("对象。")]),t._v(" "),s("li",[t._v("执行函数，函数的 this 会绑定在新创建的对象上。")]),t._v(" "),s("li",[t._v("如果函数没有返回其他对象(包括数组、函数、日期对象等)，那么会自动返回这个新对象。")]),t._v(" "),s("li",[t._v("返回的那个对象为构造函数的实例。")])]),t._v(" "),s("h4",{attrs:{id:"构造调用函数返回其他对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造调用函数返回其他对象"}},[t._v("#")]),t._v(" 构造调用函数返回其他对象")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("返回其他对象会导致获取不到构造函数的实例，很容易因此引起意外的问题")]),t._v("！")])]),t._v(" "),s("p",[s("strong",[t._v("我们知道了"),s("code",[t._v("fatherFn")]),t._v("的"),s("code",[t._v("this")]),t._v("和"),s("code",[t._v("prototype")]),t._v("的属性/方法都跟"),s("code",[t._v("new")]),t._v("期间创建的新对象有关系")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("如果在父类中返回了其他对象("),s("code",[t._v("new")]),t._v("的第四点)，其他对象没有父类的"),s("code",[t._v("this")]),t._v("和"),s("code",[t._v("prototype")]),t._v("，因此导致原型链继承失败")]),t._v("。")]),t._v(" "),s("p",[t._v("我们来测试一下，修改原型链继承中的父类"),s("code",[t._v("fatherFn")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的this属性'")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new fatherFn 期间生成的对象'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数组对象'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数对象'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'日期对象'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'正则对象'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'等等等'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'都不会返回new期间创建的新对象'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[s("img",{attrs:{src:"/img/remote/1460000020462550?w=1256&h=800",alt:"原型链继承返回其他对象,将导致原型链继承失败"}})]),t._v(" "),s("p",[t._v("PS： 本文中构造调用函数都不能返回其他函数，下文不再提及该点。")]),t._v(" "),s("h4",{attrs:{id:"不要使用对象字面量的形式创建原型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不要使用对象字面量的形式创建原型方法"}},[t._v("#")]),t._v(" 不要使用对象字面量的形式创建原型方法：")]),t._v(" "),s("blockquote",[s("p",[t._v("这种方式很容易在不经意间，清除/覆盖了原型对象原有的属性/方法，不该为了稍微简便一点，而使用这种写法。")])]),t._v(" "),s("p",[t._v("有些人在需要在原型对象上创建多个属性和方法，会使用对象字面量的形式来创建：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("sonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类的prototype被清空后 重新赋值, 导致上一行代码失效")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sonFnSome")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类原型对象的属性'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("one")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("two")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("three")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("还有一种常见的做法，该方式会导致函数原型对象的属性"),s("code",[t._v("constructor")]),t._v("丢失：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ntest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h4",{attrs:{id:"原型链继承的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链继承的缺点"}},[t._v("#")]),t._v(" 原型链继承的缺点")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("父类使用"),s("code",[t._v("this")]),t._v("声明的属性被所有实例共享")])]),t._v(" "),s("p",[t._v("原因是：实例化的父类("),s("code",[t._v("sonFn.prototype = new fatherFn()")]),t._v(")是一次性赋值到子类实例的原型("),s("code",[t._v("sonFn.prototype")]),t._v(")上，它会将父类通过"),s("code",[t._v("this")]),t._v("声明的属性也在赋值到"),s("code",[t._v("sonFn.prototype")]),t._v("上。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("值得一提的是：很多博客中说，引用类型的属性被所有实例共享，通常会用数组来举例，实际上数组以及其他父类通过"),s("code",[t._v("this")]),t._v("声明的属性也只是通过"),s("a",{attrs:{href:"https://juejin.im/post/5d622f14f265da03a1486408#heading-11",target:"_blank",rel:"noopener noreferrer"}},[t._v("原型链查找"),s("OutboundLink")],1),t._v("去获取子类实例的原型("),s("code",[t._v("sonFn.prototype")]),t._v(")上的值。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("创建子类实例时，无法向父类构造函数传参，不够灵活。")])]),t._v(" "),s("p",[t._v("这种模式父类的属性、方法一开始就是定义好的，无法向父类传参，不够灵活。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("sonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"借用构造函数继承-call"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数继承-call"}},[t._v("#")]),t._v(" 借用构造函数继承(call)")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的this属性'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父类的参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfatherFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fatherParams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("sonParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("fatherParams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心步骤: 将fatherFn的this指向sonFn的this对象上")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的this属性'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonParams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sonParams "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子类的参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fatherParamsArr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的参数1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的参数2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sonParamsArr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的参数1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的参数2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sonFnInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fatherParamsArr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("sonParamsArr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化子类")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'借用构造函数子类实例'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sonFnInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h4",{attrs:{id:"借用构造函数继承的子类实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数继承的子类实例"}},[t._v("#")]),t._v(" 借用构造函数继承的子类实例")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/remote/1460000020462551?w=852&h=360",alt:"借用构造函数继承的子类实例"}})]),t._v(" "),s("h4",{attrs:{id:"借用构造函数继承做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数继承做了什么"}},[t._v("#")]),t._v(" 借用构造函数继承做了什么？")]),t._v(" "),s("p",[t._v("声明类，组织参数等，只是辅助的上下文代码，核心是借用构造函数使用"),s("code",[t._v("call")]),t._v("做了什么：")]),t._v(" "),s("p",[s("strong",[t._v("一经调用"),s("code",[t._v("call/apply")]),t._v("它们就会立即执行函数，并在函数执行时改变函数的"),s("code",[t._v("this")]),t._v("指向")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("fatherParams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",[s("li",[t._v("在子类中使用"),s("code",[t._v("call")]),t._v("调用父类，"),s("code",[t._v("fatherFn")]),t._v("将会被立即执行，并且将"),s("code",[t._v("fatherFn")]),t._v("函数的 this 指向"),s("code",[t._v("sonFn")]),t._v("的"),s("code",[t._v("this")]),t._v("。")]),t._v(" "),s("li",[t._v("因为函数执行了，所以"),s("code",[t._v("fatherFn")]),t._v("使用 this 声明的函数都会被"),s("strong",[t._v("声明到"),s("code",[t._v("sonFn")]),t._v("的"),s("code",[t._v("this")]),t._v("对象")]),t._v("下。")]),t._v(" "),s("li",[t._v("实例化子类，this 将指向"),s("code",[t._v("new")]),t._v("期间创建的新对象，返回该新对象。")]),t._v(" "),s("li",[t._v("对"),s("code",[t._v("fatherFn.prototype")]),t._v("没有任何操作，无法继承。")])]),t._v(" "),s("p",[t._v("该对象的属性为：子类和父类声明的"),s("code",[t._v("this")]),t._v("属性/方法，它的原型是")]),t._v(" "),s("p",[t._v("PS: 关于 call/apply/bind 的更多细节，推荐查看我的博客："),s("a",{attrs:{href:"https://juejin.im/post/5d469e0851882544b85c32ef",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 基础-面试官想知道你有多理解 call,apply,bind？[不看后悔系列]"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"借用构造函数继承的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借用构造函数继承的优缺点"}},[t._v("#")]),t._v(" 借用构造函数继承的优缺点")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ol",[s("li",[t._v("可以向父类传递参数")]),t._v(" "),s("li",[t._v("解决了原型链继承中：父类属性使用"),s("code",[t._v("this")]),t._v("声明的属性会在所有实例共享的问题。")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("只能继承父类通过"),s("code",[t._v("this")]),t._v("声明的属性/方法，不能继承父类"),s("code",[t._v("prototype")]),t._v("上的属性/方法。")]),t._v(" "),s("li",[t._v("父类方法无法复用：因为无法继承父类的"),s("code",[t._v("prototype")]),t._v("，所以每次子类实例化都要执行父类函数，重新声明父类"),s("code",[t._v("this")]),t._v("里所定义的方法，因此方法无法复用。")])]),t._v(" "),s("h3",{attrs:{id:"组合继承-call-new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承-call-new"}},[t._v("#")]),t._v(" 组合继承(call+new)")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("原理")]),t._v("：使用原型链继承("),s("code",[t._v("new")]),t._v(")将"),s("code",[t._v("this")]),t._v("和"),s("code",[t._v("prototype")]),t._v("声明的属性/方法继承至子类的"),s("code",[t._v("prototype")]),t._v("上，使用借用构造函数来继承父类通过"),s("code",[t._v("this")]),t._v("声明属性和方法至子类实例的属性上。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的this属性'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父类的参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfatherFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'借用构造继承'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第二次调用'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 借用构造继承: 继承父类通过this声明属性和方法至子类实例的属性上")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的this属性'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'原型链继承'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一次调用'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型链继承: 将`this`和`prototype`声明的属性/方法继承至子类的`prototype`上")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sonFnInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'组合继承子类实例'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sonFnInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h4",{attrs:{id:"组合继承的子类实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承的子类实例"}},[t._v("#")]),t._v(" 组合继承的子类实例")]),t._v(" "),s("ol",[s("li",[t._v("原型链继承: 父类通过"),s("code",[t._v("this")]),t._v("和"),s("code",[t._v("prototype")]),t._v("声明的属性/方法继承至子类的"),s("code",[t._v("prototype")]),t._v("上。")]),t._v(" "),s("li",[t._v("借用构造继承: 父类通过 this 声明属性和方法继承至子类实例的属性上。")])]),t._v(" "),s("h4",{attrs:{id:"组合继承的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合继承的优缺点"}},[t._v("#")]),t._v(" 组合继承的优缺点")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("p",[t._v("完整继承(又不是不能用)，解决了：")]),t._v(" "),s("ol",[s("li",[t._v("父类通过"),s("code",[t._v("this")]),t._v("声明属性/方法被子类实例共享的问题(原型链继承的问题)\n每次实例化子类将重新初始化父类通过"),s("code",[t._v("this")]),t._v("声明的属性，实例根据原型链查找规则，每次都会")]),t._v(" "),s("li",[t._v("父类通过"),s("code",[t._v("prototype")]),t._v("声明的属性/方法无法继承的问题(借用构造函数的问题)。")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("两次调用父类函数("),s("code",[t._v("new fatherFn()")]),t._v("和"),s("code",[t._v("fatherFn.call(this)")]),t._v(")，造成一定的性能损耗。")]),t._v(" "),s("li",[t._v("因调用两次父类,导致父类通过"),s("code",[t._v("this")]),t._v("声明的属性/方法，生成两份的问题。")]),t._v(" "),s("li",[t._v("原型链上下文丢失：子类和父类通过 prototype 声明的属性/方法都存在于子类的 prototype 上")])]),t._v(" "),s("h3",{attrs:{id:"原型式继承-object-create"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型式继承-object-create"}},[t._v("#")]),t._v(" 原型式继承("),s("code",[t._v("Object.create()")]),t._v(")")]),t._v(" "),s("h4",{attrs:{id:"继承对象原型-object-create-实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承对象原型-object-create-实现"}},[t._v("#")]),t._v(" 继承对象原型-Object.create()实现")]),t._v(" "),s("p",[t._v("以下是"),s("code",[t._v("Object.create()")]),t._v("的模拟实现，使用"),s("code",[t._v("Object.create()")]),t._v("可以达成同样的效果，基本上现在都是使用"),s("code",[t._v("Object.create()")]),t._v("来做对象的原型继承。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将被继承的对象作为空函数的prototype")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回new期间创建的新对象,此对象的原型为被继承的对象, 通过原型链查找可以拿到被继承对象的属性")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("PS：上面"),s("code",[t._v("Object.create()")]),t._v("实现原理可以记一下，有些公司可能会让你讲一下它的实现原理。")]),t._v(" "),s("h4",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\noldObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'oldObj newObj'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("img",{attrs:{src:"/img/remote/1460000020462553?w=477&h=75",alt:"原型式继承"}})]),t._v(" "),s("h4",{attrs:{id:"原型式继承优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型式继承优缺点"}},[t._v("#")]),t._v(" 原型式继承优缺点：")]),t._v(" "),s("p",[t._v("优点： 兼容性好，最简单的对象继承。")]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("因为旧对象("),s("code",[t._v("oldObj")]),t._v(")是实例对象("),s("code",[t._v("newObj")]),t._v(")的原型，多个实例共享被继承对象的属性，存在篡改的可能。")]),t._v(" "),s("li",[t._v("无法传参")])]),t._v(" "),s("h3",{attrs:{id:"寄生式继承-封装继承过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄生式继承-封装继承过程"}},[t._v("#")]),t._v(" 寄生式继承(封装继承过程)")]),t._v(" "),s("blockquote",[s("p",[t._v("创建一个"),s("strong",[t._v("仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象")]),t._v("，最后返回对象。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAnother")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("original")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cloneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("original"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承一个对象 返回新函数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something 以某种方式来增强对象")]),t._v("\n\tclone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("some")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法")]),t._v("\n\tclone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'封装继承过程'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" clone "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回这个对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("使用场景：专门为对象来做某种固定方式的增强。")]),t._v(" "),s("h3",{attrs:{id:"寄生组合式继承-call-寄生式封装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合式继承-call-寄生式封装"}},[t._v("#")]),t._v(" 寄生组合式继承(call+寄生式封装)")]),t._v(" "),s("h4",{attrs:{id:"寄生组合式继承原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合式继承原理"}},[t._v("#")]),t._v(" 寄生组合式继承原理：")]),t._v(" "),s("ol",[s("li",[t._v("使用借用构造函数("),s("code",[t._v("call")]),t._v(")来"),s("strong",[t._v("继承父类 this 声明的属性/方法")])]),t._v(" "),s("li",[t._v("通过寄生式封装函数设置父类 prototype 为子类 prototype 的原型来继"),s("strong",[t._v("承父类的 prototype 声明的属性/方法")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("some "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类的this属性'")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父类的参数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfatherFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'父类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatherFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'借用构造继承'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心1 借用构造继承: 继承父类通过this声明属性和方法至子类实例的属性上")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类的this属性'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心2 寄生式继承：封装了son.prototype对象原型式继承father.prototype的过程，并且增强了传入的对象。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inheritPrototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fatherFnPrototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型式继承：浅拷贝father.prototype对象 father.prototype为新对象的原型")]),t._v("\n\tson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fatherFnPrototype "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置father.prototype为son.prototype的原型")]),t._v("\n\tson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修正constructor 指向")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inheritPrototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fatherFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsonFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sonFnSome "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'子类原型对象的属性或者方法'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sonFnInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'寄生组合式继承子类实例'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sonFnInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h4",{attrs:{id:"寄生组合式继承是最成熟的继承方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄生组合式继承是最成熟的继承方法"}},[t._v("#")]),t._v(" 寄生组合式继承是最成熟的继承方法：")]),t._v(" "),s("blockquote",[s("p",[t._v("寄生组合式继承是最成熟的继承方法, 也是现在最常用的继承方法，众多 JS 库采用的继承方案也是它。")])]),t._v(" "),s("p",[t._v("寄生组合式继承相对于组合继承有如下优点：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("只调用一次父类"),s("code",[t._v("fatherFn")]),t._v("构造函数。")])]),t._v(" "),s("li",[s("p",[t._v("避免在子类 prototype 上创建不必要多余的属性。")])]),t._v(" "),s("li",[s("p",[t._v("使用原型式继承父类的 prototype，保持了原型链上下文不变。")]),t._v(" "),s("p",[t._v("子类的 prototype 只有子类通过 prototype 声明的属性/方法和父类 prototype 上的属性/方法泾渭分明。")])])]),t._v(" "),s("h3",{attrs:{id:"es6-extends-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es6-extends-继承"}},[t._v("#")]),t._v(" ES6 extends 继承：")]),t._v(" "),s("blockquote",[s("p",[t._v("ES6 继承的原理跟寄生组合式继承是一样的。")])]),t._v(" "),s("p",[t._v("ES6 "),s("code",[t._v("extends")]),t._v("核心代码：")]),t._v(" "),s("p",[t._v("这段代码是通过"),s("a",{attrs:{href:"%5Bhttps://www.babeljs.cn/repl%5D(https://www.babeljs.cn/repl)"}},[t._v("babel 在线编译")]),t._v("成 es5, 用于子类 prototype 原型式继承父类"),s("code",[t._v("prototype")]),t._v("的属性/方法。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 寄生式继承 封装继承过程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型式继承: 设置father.prototype为son.prototype的原型 用于继承father.prototype的属性/方法")]),t._v("\n\tson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("father "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修正constructor 指向")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将父类设置为子类的原型 用于继承父类的静态属性/方法(father.some)")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setPrototypeOf\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("另外子类是通过借用构造函数继承("),s("code",[t._v("call")]),t._v(")来继承父类通过"),s("code",[t._v("this")]),t._v("声明的属性/方法，也跟寄生组合式继承一样。")]),t._v(" "),s("h4",{attrs:{id:"es5-继承与-es6-继承的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es5-继承与-es6-继承的区别"}},[t._v("#")]),t._v(" ES5 继承与 ES6 继承的区别：")]),t._v(" "),s("blockquote",[s("p",[t._v("本段摘自"),s("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/class-extends#%E7%AE%80%E4%BB%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰-es6 入门文档"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("ES5 的继承实质上是"),s("strong",[t._v("先创建子类的实例对象，再将父类的方法添加到 this 上")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("ES6 的继承是"),s("strong",[t._v("先创建父类的实例对象 this，再用子类的构造函数修改 this")]),t._v("。")]),t._v(" "),s("p",[t._v("因为子类没有自己的 this 对象，所以必须先调用父类的 super()方法。")])])]),t._v(" "),s("h2",{attrs:{id:"扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展：")]),t._v(" "),s("h3",{attrs:{id:"为什么要修正-constructor-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要修正-constructor-指向"}},[t._v("#")]),t._v(" 为什么要修正 constructor 指向？")]),t._v(" "),s("p",[t._v("在寄生组合式继承中有一段如下一段修正 constructor 指向的代码，很多人对于它的作用以及为什么要修正它不太清楚。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" son "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修正constructor 指向")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"constructor-的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor-的作用"}},[t._v("#")]),t._v(" constructor 的作用")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),s("OutboundLink")],1),t._v("的定义："),s("strong",[t._v("返回创建实例对象的"),s("code",[t._v("Object")]),t._v("构造函数的引用")]),t._v("。")]),t._v(" "),s("p",[t._v("即返回实例对象的构造函数的引用，例如：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ninstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sonFn函数")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("h4",{attrs:{id:"constructor的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constructor的应用场景"}},[t._v("#")]),t._v(" "),s("code",[t._v("constructor")]),t._v("的应用场景：")]),t._v(" "),s("p",[s("strong",[t._v("当我们只有实例对象没有构造函数的引用时")]),t._v("：")]),t._v(" "),s("p",[t._v("某些场景下，我们对实例对象经过多轮导入导出，我们不知道实例是从哪个函数中构造出来或者追踪实例的构造函数，较为艰难。")]),t._v(" "),s("p",[t._v("这个时候就可以通过实例对象的"),s("code",[t._v("constructor")]),t._v("属性来得到构造函数的引用：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("sonFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化子类")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多轮导入+导出，导致sonFn追踪非常麻烦，或者不想在文件中再引入sonFn")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("  fn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something： new fn() / fn.prototype / fn.length / fn.arguments等等")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"保持constructor指向的一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保持constructor指向的一致性"}},[t._v("#")]),t._v(" 保持"),s("code",[t._v("constructor")]),t._v("指向的一致性：")]),t._v(" "),s("p",[t._v("因此每次重写函数的 prototype 都应该修正一下"),s("code",[t._v("constructor")]),t._v("的指向，以保持读取"),s("code",[t._v("constructor")]),t._v("行为的一致性。")]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("继承也是前端的高频面试题，了解本文中继承方法的优缺点，有助于更深刻的理解 JS 继承机制。除了组合继承和寄生式继承都是由其他方法组合而成的，分块理解会对它们理解的更深刻。")]),t._v(" "),s("p",[t._v("建议多看几遍本文，建个"),s("code",[t._v("html")]),t._v("文件试试文中的例子，两相结合更佳！")]),t._v(" "),s("p",[t._v("对 prototype 还不是很理解的同学，可以再看看："),s("a",{attrs:{href:"https://juejin.im/post/5d622f14f265da03a1486408",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS 基础-函数、对象和原型、原型链的关系"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("参考资料：")]),t._v(" "),s("p",[t._v("JS 高级程序设计(红宝书)6.3 继承")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5bcb2e295188255c55472db0",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 常用八种继承方案"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"点个star支持我一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#点个star支持我一下"}},[t._v("#")]),t._v(" 点个"),s("a",{attrs:{href:"https://boom-bo.github.io/web_accumulation",target:"_blank",rel:"noopener noreferrer"}},[t._v("Star"),s("OutboundLink")],1),t._v("支持我一下~")])])}),[],!1,null,null,null);s.default=e.exports}}]);